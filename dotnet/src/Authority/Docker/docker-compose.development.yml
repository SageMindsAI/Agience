networks:
    
  agience-net:
    name: agience-net-development

services:
    
  identity:
    container_name: identity-development
    image: identity:development
    restart: on-failure
    build:
      context: ../..
      dockerfile: Authority/Identity/Dockerfile     
      args:
        BUILD_ENVIRONMENT: development
    ports:
      - "0.0.0.0:5001:5001"
    environment:
      - AGIENCE_INITIALIZE=${AGIENCE_INITIALIZE:-false}
    env_file:
      - ../Identity/.env.development
    volumes:
      - ../Build/certs/localhost.pfx:/app/https/localhost.pfx:ro
      - ../Build/certs/agience-development.pfx:/app/https/agience-development.pfx:ro
      - ../Build/certs/agience-development.crt:/usr/local/share/ca-certificates/agience-development.crt:ro
    entrypoint: /bin/bash -c "update-ca-certificates && exec dotnet Agience.Authority.Identity.dll"

  manage:
    container_name: manage-development  
    image: manage:development
    restart: always
    build:
      context: ../..
      dockerfile: Authority/Manage/Dockerfile
      args:
        BUILD_ENVIRONMENT: development  
    ports:
      - "0.0.0.0:5002:5002"
    env_file:
      - ../Manage/.env.development
    volumes:
      - ../Build/certs/localhost.pfx:/app/https/localhost.pfx
      - ../Build/certs/agience-development.pfx:/app/https/agience-development.pfx
      - ../Build/certs/agience-development.crt:/usr/local/share/ca-certificates/agience-development.crt
    entrypoint: /bin/bash -c "update-ca-certificates && exec dotnet Agience.Authority.Manage.dll"
      
  database:  
    container_name: database-development  
    image: database:development
    restart: always  
    build:
      context: ../..
      dockerfile: Authority/Database/Dockerfile     
      args:
        BUILD_ENVIRONMENT: development     
    env_file:
      - ../Database/.env.development
    ports:
      - "0.0.0.0:5432:5432"
    volumes:
      #- ../Build/certs/localhost.crt:/etc/postgresql/certs/certfile.crt
      #- ../Build/certs/localhost.key:/etc/postgresql/certs/keyfile.key
      - ../Build/certs/agience-development.crt:/etc/postgresql/certs/certfile.crt
      - ../Build/certs/agience-development.key:/etc/postgresql/certs/keyfile.key
      - authority-data:/var/lib/postgresql/data

  broker:
    container_name: broker-development  
    image: broker:development
    restart: always  
    build:
      context: ../..
      dockerfile: Authority/Broker/Dockerfile
      args:
        BUILD_ENVIRONMENT: development
    ports:      
      - "0.0.0.0:1884:1884"
    volumes:
      - ../Build/certs/localhost.crt:/etc/mosquitto/certs/localhost.crt
      - ../Build/certs/localhost.key:/etc/mosquitto/certs/localhost.key
      - ../Build/certs/agience-development.crt:/etc/mosquitto/certs/agience-development.crt
      - ../Build/certs/agience-development.key:/etc/mosquitto/certs/agience-development.key
      - ../Build/certs/agience-development.crt:/usr/local/share/ca-certificates/agience-development.crt

  stream:
    container_name: stream-development  
    image: stream:development
    restart: always  
    build:      
      context: ../..
      dockerfile: Authority/Stream/Dockerfile      
      args:
        BUILD_ENVIRONMENT: development
    ports:
      - "0.0.0.0:8000:8000"
    volumes:
      - ../Stream/icecast.development.xml:/etc/icecast.xml:ro
      - ../Stream/icecast.development.secrets.xml:/etc/icecast.secrets.xml:ro
      - icecast-logs:/var/log/icecast
