@page
@using System.Text.Json

@model Agience.Authority.Manage.Web.Pages.AgentsModel
@{
    ViewBag.Title = "Agience - My Agents";
}

<style>
    .bs-tooltip-auto[data-popper-placement^=top] .tooltip-arrow::before, .bs-tooltip-top .tooltip-arrow::before {
        top: -1px;
        border-width: .4rem .4rem 0;
        border-top-color: #444444;
    }
</style>
@* Modal Add Plugin *@
@* prepare modal content body *@
@{

    var addPluginModalBody = @"
     <div class=""row border border-secondary w-auto rounded-pill mb-3"">
         <div class=""col-10 p-0"">
             <input type=""text"" id=""searchTerm"" class=""form-control mb-0 rounded-pill bg-transparent border-0 shadow-none height-30 w-100"" placeholder=""Enter search term""/>
         </div>
         <div class=""col-2 p-1"">
             <button class=""btn btn-primary bg-transparent border-0 shadow-none p-0 ms-2 mt-2"" onclick=""findPlugins()"" ><i class=""fa-solid fa-magnifying-glass fa-xl text-muted"" ></i></button>
         </div>
     </div>
     <div class=""form-check"">
         <input type=""checkbox"" id=""includePublic"" class=""form-check-input"" />
         <label class=""form-check-label"" for=""includePublic"">Include Public Plugins</label>
     </div>
     <div id=""findPluginResults"" class=""mt-3"">
 ";

    foreach (var plugin in Model.FindPluginResults)
    {
        addPluginModalBody = addPluginModalBody + @"
        <div class=""d-flex justify-content-between align-items-center"">" +
            "<span>" + @plugin.Name + "</span>" + 
            @"<button class=""btn btn-primary"" onclick=""addPlugin('" + @plugin.Id + @"');"">Add</button>
        </div>";
    }
}

@await Html.PartialAsync("../Shared/_ModalPopup", new Agience.Authority.Manage.Web.Models.ModalPopupViewModel()
{
    TilleId = "addPluginModalLabel",
    Title = "Add Plugin",
    ModalId = "addPluginModal",
    BodyContent = addPluginModalBody
})

@* Modal Authorizer *@
@* prepare modal content body *@
@{
    var selectAuthorizerModalBody = @"
                <input type=""hidden"" id=""currentAgentId"" />
                <input type=""hidden"" id=""currentAgentConnection"" />
                <div id=""findAuthorizerResults"" class=""mt-3"">";
    
    @foreach (var authorizer in Model.SelectAuthorizerResults)
    {
        selectAuthorizerModalBody = selectAuthorizerModalBody + @"
                        <div class=""d-flex justify-content-between align-items-center"">
                            <span>" + @authorizer.Name + @"</span>
                            <button class=""btn btn-primary"" onclick=""selectAuthorizer('" + @authorizer.Id + @"');"">Select</button>
                        </div>";
    }

    selectAuthorizerModalBody = selectAuthorizerModalBody + "</div>";
}

@await Html.PartialAsync("../Shared/_ModalPopup", new Agience.Authority.Manage.Web.Models.ModalPopupViewModel()
{
    TilleId = "selectAuthorizerModalLabel",
    Title = "Select Authorizer",
    ModalId = "selectAuthorizerModal",
    BodyContent = selectAuthorizerModalBody
})


@{
    string agentsJson = JsonSerializer.Serialize(Model.Agents);
    string agenciesJson = JsonSerializer.Serialize(Model.Agencies);
    string hostsJson = JsonSerializer.Serialize(Model.Hosts);
    string findPluginResultsJson = JsonSerializer.Serialize(Model.FindPluginResults);
    string selectAuthorizerResultsJson = JsonSerializer.Serialize(Model.SelectAuthorizerResults);
}

<form method="post">
    <input type="hidden" name="selectAuthorizerResultsJson" id="selectAuthorizerResultsJson" value="@selectAuthorizerResultsJson" />
    <input type="hidden" name="findPluginResultsJson" id="findPluginResultsJson" value="@findPluginResultsJson" />
    <input type="hidden" name="agentsJson" id="agentsJson" value="@agentsJson" />
    <input type="hidden" name="agenciesJson" id="agenciesJson" value="@agenciesJson" />
    <input type="hidden" name="hostsJson" id="hostsJson" value="@hostsJson" />
    <input type="hidden" name="activeTab" id="activeTab" value="@TempData["ActiveTab"]" />
    <input type="hidden" name="activePage" id="activePage" value="@TempData["ActivePage"]" />
    <div class="tab-container">
        <div class="tab-container-header w-100">
            <div class="tab-container-name">Agents</div>
            <div class="tab-header-item" id="tab-header-item-details"><button>Details</button></div>
            <div class="tab-header-item" id="tab-header-item-plugins"><button>Plugins</button></div>
            <div class="tab-header-item" id="tab-header-item-connections"><button>Connections</button></div>
        </div>
        <div class="tab-container-content w-100">
            <div class="left-column">
                <ul>
                    @foreach (var agent in Model.Agents)
                    {
                        <li class="tab-page-item" id="tab-page-item-@agent.Id">
                            <button>@(agent.Id == "new" ? '+' : agent.Name)</button>
                        </li>
                    }
                </ul>
            </div>
            <div class="right-column">
                @foreach (var agent in Model.Agents)
                {
                    @if (TempData["ActivePage"]?.ToString() == agent.Id)
                    {
                        <div class="tab-page" id="tab-page-@agent.Id">
                            @if (TempData["ActiveTab"]?.ToString() == "details")
                            {
                                <input type="hidden" asp-for="@agent.Id" />
                                <div class="tab-content" id="tab-content-details">
                                    <div class="tab-page-content">
                                        <div class="col-12 col-md-6 col-lg-6 mx-auto">
                                            <div class="card">
                                                <div class="card-body">
                                                    <div class="row">
                                                        <div class="col-12 col-md-6 mb-3">
                                                            <label for="txtName">Name:</label>
                                                            <input id="txtName" asp-for="@agent.Name" class="form-control" placeholder="@(agent.Id == "new" ? "New Agent Name" : null)" />
                                                        </div>
                                                        <div class="col-12 col-md-6 mb-3">
                                                            <label for="txtDescription">Description:</label>
                                                            <input id="txtDescription" asp-for="@agent.Description" class="form-control" />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-12 col-md-6 mb-3">
                                                            <label for="txtPersona">Persona:</label>
                                                            <input id="txtPersona" asp-for="@agent.Persona" class="form-control" />
                                                        </div>
                                                        <div class="col-12 col-md-6 mb-3">
                                                            <label for="ddlAgency">Agency:</label>
                                                            <select id="ddlAgency" asp-for="@agent.AgencyId" class="form-select">
                                                                <option value="">-- Select an Agency --</option>
                                                                @foreach (var agency in Model.Agencies)
                                                                {
                                                                    <option value="@agency.Id">@agency.Name</option>
                                                                }
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-12 col-md-6 mb-3">
                                                            <label for="ddlHost">Host:</label>
                                                            <select id="ddlHost" asp-for="@agent.HostId" class="form-select">
                                                                <option value="">-- Select a Host --</option>
                                                                @foreach (var host in Model.Hosts)
                                                                {
                                                                    <option value="@host.Id">@host.Name</option>
                                                                }
                                                            </select>
                                                        </div>
                                                        <div class="col-12 col-md-6 mb-3">
                                                            <label for="txtChatCompletionFunction">Chat Completion Function:</label>
                                                            <input onmouseover="tooltip()" id="txtChatCompletionFunction" asp-for="@agent.ChatCompletionFunctionName" class="form-control" data-bs-toggle="tooltip" data-bs-html="true" title="<i class='fa-solid fa-circle-info'></i><p>Function names are case sensitive and should be in the format: pluginName.functionName</p><p><b>Async</b> suffix will be ignored.</p>" />
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-12 col-md-6 mb-3">
                                                            <label for="txtAutoStartFunction">Auto Start Function:</label>
                                                            <input id="txtAutoStartFunction" asp-for="@agent.AutoStartFunctionName" class="form-control" />
                                                        </div>
                                                        <div class="col-12 col-md-6 mb-3">
                                                            <label for="ddlAutoStartCompletionAction">Auto Start Completion Action:</label>
                                                            <select id="ddlAutoStartCompletionAction" asp-for="@agent.AutoStartFunctionCompletionAction" class="form-select">
                                                                <option value="Idle">Idle</option>
                                                                <option value="Restart">Restart</option>
                                                            </select>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-12 col-md-6 mb-3">
                                                            Enabled <input asp-for="@agent.IsEnabled" type="checkbox" />
                                                        </div>
                                                    </div>
                                                    <div class="row m-3 text-center">
                                                        <div class="col-12">
                                                            <button type="submit" class="btn btn-primary" asp-page-handler="AgentSave"><i class="bi bi-floppy-fill"></i> Save</button>
                                                            <button type="submit" class="btn btn-primary border-0 bg-danger text-white" asp-page-handler="AgentDelete" disabled="@(agent.Id == "new")"><i class="fa-solid fa-trash"></i></button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                            @if (TempData["ActiveTab"]?.ToString() == "plugins")
                            {
                                <div class="tab-content" id="tab-content-plugins">
                                    <div class="tab-page-content">
                                        <div class="tab-page-content-header">
                                            <div class="tab-page-content-header-cell">Name</div>
                                            <div class="tab-page-content-header-cell">Description</div>
                                            <div class="tab-page-content-header-cell-action">&nbsp;</div>
                                        </div>
                                        <ul class="tab-page-content-list">
                                            @for (int i = 0; i < agent.Plugins.Count; i++)
                                            {
                                                <li class="tab-page-content-list-item">
                                                    <div class="tab-page-content-list-item-cell">
                                                        <input asp-for="@agent.Plugins[i].Name" class="form-control" disabled />
                                                    </div>
                                                    <div class="tab-page-content-list-item-cell">
                                                        <input asp-for="@agent.Plugins[i].Description" class="form-control" disabled />
                                                    </div>
                                                    <div class="tab-page-content-list-item-action">
                                                        <button class="btn btn-primary" asp-page-handler="RemovePlugin" asp-route-agentId="@agent.Id" asp-route-pluginId="@agent.Plugins[i].Id">Remove</button>
                                                    </div>
                                                </li>
                                            }
                                        </ul>
                                        <button class="btn btn-primary" onclick="$('#addPluginModal').modal('show');return false;">Add Plugin</button>
                                    </div>
                                </div>
                            }
                            @if (TempData["ActiveTab"]?.ToString() == "connections")
                            {
                                <div class="tab-content" id="tab-content-connections">
                                    <div class="tab-page-content">
                                        <div class="tab-page-content-header">
                                            <div class="tab-page-content-header-cell">Plugin</div>
                                            <div class="tab-page-content-header-cell">Connection</div>
                                            <div class="tab-page-content-header-cell">Authorizer</div>
                                            <div class="tab-page-content-header-cell">Status</div>
                                            <div class="tab-page-content-header-cell-action">&nbsp;</div>
                                        </div>
                                        <ul class="tab-page-content-list">
                                            @for (int i = 0; i < agent.Connections.Count; i++)
                                            {
                                                <li class="tab-page-content-list-item">
                                                    <div class="tab-page-content-list-item-cell">
                                                        <input asp-for="@agent.Connections[i].PluginConnection.Plugin.Name" class="form-control" disabled />
                                                    </div>
                                                    <div class="tab-page-content-list-item-cell">
                                                        <input asp-for="@agent.Connections[i].PluginConnection.Name" class="form-control" disabled />
                                                    </div>
                                                    <div class="tab-page-content-list-item-cell">
                                                        @if (agent.Connections[i].Authorizer == null)
                                                        {
                                                            <button class="btn btn-primary" onclick='openSelectAuthorizerModal("@agent.Id", @Json.Serialize(agent.Connections[i]));return false;'>Select</button>
                                                        }
                                                        else
                                                        {
                                                            <input asp-for="@agent.Connections[i].Authorizer.Name" class="form-control" disabled />
                                                            <button class="btn btn-primary" onclick='openSelectAuthorizerModal("@agent.Id", @Json.Serialize(agent.Connections[i]));return false;'>Change</button>
                                                        }
                                                    </div>
                                                    <div class="tab-page-content-list-item-cell">
                                                        <input asp-for="@agent.Connections[i].Status" class="form-control" disabled />
                                                    </div>
                                                    <div class="tab-page-content-list-item-action">
                                                        <button class="btn btn-primary" asp-page-handler="ActivateConnection" asp-route-agentId="@agent.Id"
                                                                asp-route-pluginConnectionId="@agent.Connections[i].PluginConnection.Id" disabled="@(agent.Connections[i].Status == Authority.Models.Manage.ConnectionStatus.Active)">
                                                            Activate
                                                        </button>
                                                        <button class="btn btn-primary" asp-page-handler="DeactivateConnection" asp-route-agentId="@agent.Id"
                                                                asp-route-pluginConnectionId="@agent.Connections[i].PluginConnection.Id" disabled="@(agent.Connections[i].Status == Authority.Models.Manage.ConnectionStatus.Inactive)">
                                                            Deactivate
                                                        </button>
                                                    </div>
                                                </li>
                                            }

                                        </ul>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</form>
@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {

            var pageItems = @Html.Raw(Json.Serialize(Model.Agents));

            pageItems.forEach(function (pageItem) {
                var itemButton = document.querySelector('#tab-page-item-' + pageItem.id + ' button');
                if (itemButton) {
                    itemButton.addEventListener('click', function (event) {
                        event.preventDefault();
                        document.getElementById('activePage').value = pageItem.id;
                        makePageActive(pageItem.id);
                        DoPostback();
                    });
                }
            });

            let tabItems = ["details", "plugins", "connections"];

            tabItems.forEach(function (itemName) {
                document.querySelector('#tab-header-item-' + itemName + ' button').addEventListener('click', function (event) {
                    event.preventDefault();
                    document.getElementById('activeTab').value = itemName;
                    makeTabActive(itemName);
                    DoPostback();
                });
            });

            makeTabActive(document.getElementById('activeTab').value);
            makePageActive(document.getElementById('activePage').value);

        });

        function acknowledgeCredentials() {
            $("#credentialsModal").modal('hide');
            TempData["HostCredentials"] = null;
        }

        function makeActive(selector, id) {
            document.querySelectorAll(selector).forEach(function (item) {
                if (item.id === id) {
                    item.classList.add("active");
                }
                else {
                    item.classList.remove("active");
                }
            });
        }

        function makePageActive(pageId) {
            makeActive(".tab-page-item", "tab-page-item-" + pageId);
        }

        function makeTabActive(itemName) {
            makeActive(".tab-header-item", "tab-header-item-" + itemName);
        }

        function DoPostback() {
            const form = document.forms[0];
            const formData = new FormData(form);
            fetch(form.action, {
                method: 'POST',
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            }).then(response => response.text()).then(html => {
                document.querySelector('.right-column').innerHTML =
                    new DOMParser().parseFromString(html, 'text/html')
                        .querySelector('.right-column').innerHTML;
            }).catch(error => console.error('Error:', error));
        }

        function findPlugins() {
            const searchTerm = document.getElementById('searchTerm').value;
            const includePublic = document.getElementById('includePublic').checked;

            const form = document.forms[0];
            const formData = new FormData(form);
            formData.append('searchTerm', searchTerm);
            formData.append('includePublic', includePublic);

            fetch(form.action + "?handler=FindPlugins", {
                method: form.method,
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            }).then(response => response.text()).then(html => {
                const parser = new DOMParser();
                const newDoc = parser.parseFromString(html, 'text/html');
                document.getElementById('findPluginResults').innerHTML = newDoc.getElementById('findPluginResults').innerHTML;
                document.getElementById('findPluginResultsJson').value = newDoc.querySelector('#findPluginResultsJson').value;
            }).catch(error => console.error('Error:', error));
        }

        function addPlugin(pluginId) {
            const agentId = document.getElementById('activePage').value;

            const form = document.forms[0];
            const formData = new FormData(form);
            formData.append('pluginId', pluginId);
            formData.append('agentId', agentId);

            fetch(form.action + "?handler=AddPlugin", {
                method: form.method,
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            }).then(response => response.text()).then(html => {
                const parser = new DOMParser();
                const newDoc = parser.parseFromString(html, 'text/html');
                document.querySelector('.right-column').innerHTML =
                    newDoc.querySelector('.right-column').innerHTML;
                const agentsJson = newDoc.querySelector('#agentsJson').value;
                document.querySelector('#agentsJson').value = agentsJson;
            }).catch(error => console.error('Error:', error));
        }

        function openSelectAuthorizerModal(agentId, connection) {
            document.getElementById('currentAgentId').value = agentId;
            document.getElementById('currentAgentConnection').value = JSON.stringify(connection);

            fetchAuthorizers();

            $('#selectAuthorizerModal').modal('show');
        }

        function fetchAuthorizers() {
            const form = document.forms[0];
            const formData = new FormData(form);

            fetch(form.action + "?handler=FindAuthorizers", {
                method: form.method,
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            }).then(response => response.text()).then(html => {
                const parser = new DOMParser();
                const newDoc = parser.parseFromString(html, 'text/html');
                document.getElementById('findAuthorizerResults').innerHTML = newDoc.getElementById('findAuthorizerResults').innerHTML;
            }).catch(error => console.error('Error:', error));
        }

        function selectAuthorizer(authorizerId) {
            const agentId = document.getElementById('currentAgentId').value;
            const agentConnection = document.getElementById('currentAgentConnection').value;

            const form = document.forms[0];
            const formData = new FormData(form);
            formData.append('agentId', agentId);
            formData.append('authorizerId', authorizerId);
            formData.append('agentConnection', agentConnection);

            fetch(form.action + "?handler=SelectAuthorizer", {
                method: form.method,
                body: formData,
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            }).then(response => response.text()).then(html => {
                const parser = new DOMParser();
                const newDoc = parser.parseFromString(html, 'text/html');
                document.querySelector('.right-column').innerHTML =
                    newDoc.querySelector('.right-column').innerHTML;
                $('#selectAuthorizerModal').modal('hide');
            }).catch(error => console.error('Error:', error));
        }

        function tooltip() {
            if (document.getElementsByClassName("tooltip-inner").length != 1) {
                var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'))
                var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                    return new bootstrap.Tooltip(tooltipTriggerEl)
                })
            }
        }
    </script>
}